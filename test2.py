# Задание 1:
# Нужно создать обычный калькулятор состоящий из знаков +,-,*,/
# 1. У пользователя просят выбрать знак
# 2. Просят ввести 1-ое число
# 3. Просят ввести 2-ое число
# 4. Вывести результат
# 5. После результата спросить у пользователя хочет он закончить или нет, 
# если нет то калькулятор должен запускатся сначала
# 6. Учесть то что деление на ноль невозможно
'''
print('простейший калькулятор')
while True:
    n = input('выберите знак (+, -, *, / (деление на ноль невозможно)):')
    if n in ('+', '-', '*', '/'):
        a = int(input('введите первое число:'))
        b = int(input('введите второе число:'))
        if n == '+':
            print(a + b)
            print('хотите ли вы закончить или нет')
            d = input()
            if d == 'нет':
                print('ok')
            else:
                break
        elif n == '-':
            print(a - b)
            print('хотите ли вы закончить или нет')
            d = input()
            if d == 'нет':
                print('ok')
            else:
                break
        elif n == '*':
            print(a * b)
            print('хотите ли вы закончить или нет')
            d = input()
            if d == 'нет':
                print('ok')
            else:
                break
        elif n == '/':
            print(a / b)
            print('хотите ли вы закончить или нет')
            d = input()
            if d == 'нет':
                print('ok')
            else:
                break
'''

# Задание 2:
# Даны три переменные "A", "B" и "C". 
# Изменить значения этих переменных так, чтобы в "A" хранилось значение "A"+"B", 
# в "B" хранилась разность старых значений "C" - "A", 
# а в "C" хранилось сумма старых значений "A" + "B" + "C". 
# Например, A=0, B=2, C=5, тогда новые значения A=2, B=5 и C=7.

'''
a = int(input('a:'))
b = int(input('b:'))
c = int(input('c:'))

ab = a + b
ca = c - a
abc = a + b + c
print(ab)
print('разность старых значений;', ca)
print('сумма:', abc)
'''


# Задание 3:
    # Пользователь вводит сторону квадрата. Найдите периметр и площадь квадрата.

'''
def square(sd):
    return (4 * sd, sd ** 2, (2 * sd ** 2) ** .5)

result = square(int(input("Введите сторону квадрата: ")))
print(result)
'''

# Задание 4:
# Вам даны несколько последовательностей чисел:
# sequence_0 = (14,10,35,45,'60',70,90,0,105,150,10.0,45.0,'70',0)
# sequence_1 = (14,10,35,45,'60',70,90,0,105,150,'70')
# sequence_2 = (14,10,35,45,'60',70,90,0,105,150,10.0,45.0,'70',0.0)
# sequence_3 = (14,10,35,45,'60',70,90,0,105,150,10.0,45.0,'70')

# Нужно проверить, все ли числа в КАЖДОЙ последовательности уникальны.
# Если в последовательности были найдены дубликаты ---> Выведите на экран: "Последовательность не уникальна."
# Если в последовательности дубликатов найдено не было ---> Выведите на экран: "Последовательность уникальна."
# Если в решении задания не присутствует цикл ---> Задание не защитано.

'''
sequence_0 = (14,10,35,45,'60',70,90,0,105,150,10.0,45.0,'70',0)
sequence_1 = (14,10,35,45,'60',70,90,0,105,150,'70')
sequence_2 = (14,10,35,45,'60',70,90,0,105,150,10.0,45.0,'70',0.0)
sequence_3 = (14,10,35,45,'60',70,90,0,150,150,10.0,45.0,'70')

def dublicate(user_tuple):
    i = 0
    j = 1
    flag = True
    while j < len(user_tuple):
        if user_tuple[i] == user_tuple[j]:
            print('найдены дубликаты', user_tuple[i], user_tuple[j])
            flag = False
            break
        i += 1
        j += 1
    if flag:
        print('дубликатов нет')

dublicate(sequence_0)
dublicate(sequence_1)
dublicate(sequence_2)
dublicate(sequence_3)
'''

# Задание 5:
    # Создайте input и спросите у пользоваетля как работает встроенная функция reversed().
    # В терминале пользователя должен ввести пример функции reversed() и отправить это вашей программе.
    # Ваша программа должна исполнить ту часть кода которую ввёл пользователь и вывести на экран результат.
    # Если пользователь ввёл что-то не по синтаксису Python поймайте это с помощью try: except:
    # Если пользователь всё ввёл верно выполните его программу.
    # Если поймали ошибку ---> Спросите снова как работает встроенная функция reversed().

'''
try:
    user_text = input('Введите текст: ')
    user_kommand = input('Введите команду: ')
    if user_kommand.endswith('.reverse()'):
        print(user_text[::-1])
except:
    print('Пользователь ввел неправильную функцию')
'''


